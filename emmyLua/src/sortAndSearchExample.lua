---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by bulan.
--- DateTime: 2018/11/24 13:19
---

print('sortExample.lua')

local data1 = { key = 1, value = "a" }
local data2 = { key = 2, value = "b" }
local data3 = { key = 3, value = "c" }

local dataSet = { data3, data2, data1 }

for key,value in pairs(dataSet) do
    print(key, value.key, value.value)
end

function CompareData(a, b)
    return a.key < b.key
end

table.sort(dataSet, CompareData)

print('after sort')

for key,value in pairs(dataSet) do
    print(key, value.key, value.value)
end

local serach = {};
function serach.BinarySearch(dataList, targetData)

    local left = 1;
    local right = #dataList
    while left ~= right do

        local mid = math.ceil((left + right) / 2)
        print('mid ' .. mid .. ' left ' .. left .. ' right ' .. right)
        if dataList[mid].key == targetData then
            return mid;
        elseif dataList[mid].key < targetData then
            left = mid + 1
        else
            right = mid - 1;
        end
        --mid = math.ceil((left + right) / 2)
    end
    return -1
end

print(dataSet[1].value)
print(dataSet[2].value)
print(dataSet[3].value)

print(dataSet[1].key)
print(dataSet[2].key)
print(dataSet[3].key)

local index = serach.BinarySearch(dataSet, 2);
print('find 2 ', index, dataSet[index].key, dataSet[index].value)
index = serach.BinarySearch(dataSet, 4);
local data = dataSet[index]
if(data ~= nil) then
    print('find 4 ', index, dataSet[index].key, dataSet[index].value)
else
    print('data nil')
end
